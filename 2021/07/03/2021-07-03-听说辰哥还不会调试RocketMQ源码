

<!DOCTYPE html>
<html lang="zh-CN" data-default-color-scheme=auto>



<head>
  <meta charset="UTF-8">
  <link rel="apple-touch-icon" sizes="76x76" href="/img/logo.jpg">
  <link rel="icon" href="/img/logo.jpg">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5.0, shrink-to-fit=no">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  
  <meta name="theme-color" content="#2f4154">
  <meta name="author" content="James">
  <meta name="keywords" content="">
  
    <meta name="description" content="1. 获取RocketMQ源码RocketMQ原先是阿里巴巴内部使用的消息中间件,于2017年提交到Apache基金会成为Apache基金会的顶级开源项目,GitHub代码库链接:https:&#x2F;&#x2F;github.com&#x2F;apache&#x2F;rocketmq.git.在Github网站上搜索RocketMQ,如图所示.   克隆源码,命令如下  git clone https:&#x2F;&#x2F;github.com&#x2F;ap">
<meta property="og:type" content="article">
<meta property="og:title" content="听说辰哥还不会调试RocketMQ源码?今晚不睡也得让辰哥学会">
<meta property="og:url" content="https://chang6666.github.io/2021/07/03/2021-07-03-%E5%90%AC%E8%AF%B4%E8%BE%B0%E5%93%A5%E8%BF%98%E4%B8%8D%E4%BC%9A%E8%B0%83%E8%AF%95RocketMQ%E6%BA%90%E7%A0%81">
<meta property="og:site_name" content="码农十八讲">
<meta property="og:description" content="1. 获取RocketMQ源码RocketMQ原先是阿里巴巴内部使用的消息中间件,于2017年提交到Apache基金会成为Apache基金会的顶级开源项目,GitHub代码库链接:https:&#x2F;&#x2F;github.com&#x2F;apache&#x2F;rocketmq.git.在Github网站上搜索RocketMQ,如图所示.   克隆源码,命令如下  git clone https:&#x2F;&#x2F;github.com&#x2F;ap">
<meta property="og:locale" content="zh_CN">
<meta property="og:image" content="https://raw.githubusercontent.com/ChangNingbo/blog_img/main/img202208081429568.png">
<meta property="og:image" content="https://raw.githubusercontent.com/ChangNingbo/blog_img/main/img202208081429519.png">
<meta property="og:image" content="https://raw.githubusercontent.com/ChangNingbo/blog_img/main/img202208081429973.png">
<meta property="og:image" content="https://raw.githubusercontent.com/ChangNingbo/blog_img/main/img202208081429089.png">
<meta property="article:published_time" content="2021-07-03T00:29:53.000Z">
<meta property="article:modified_time" content="2022-08-08T06:30:05.539Z">
<meta property="article:author" content="James">
<meta property="article:tag" content="RocketMQ">
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:image" content="https://raw.githubusercontent.com/ChangNingbo/blog_img/main/img202208081429568.png">
  
  
  
  <title>听说辰哥还不会调试RocketMQ源码?今晚不睡也得让辰哥学会 - 码农十八讲</title>

  <link  rel="stylesheet" href="https://lib.baomitu.com/twitter-bootstrap/4.6.1/css/bootstrap.min.css" />



  <link  rel="stylesheet" href="https://lib.baomitu.com/github-markdown-css/4.0.0/github-markdown.min.css" />

  <link  rel="stylesheet" href="https://lib.baomitu.com/hint.css/2.7.0/hint.min.css" />

  <link  rel="stylesheet" href="https://lib.baomitu.com/fancybox/3.5.7/jquery.fancybox.min.css" />



<!-- 主题依赖的图标库，不要自行修改 -->
<!-- Do not modify the link that theme dependent icons -->

<link rel="stylesheet" href="//at.alicdn.com/t/font_1749284_hj8rtnfg7um.css">



<link rel="stylesheet" href="//at.alicdn.com/t/font_1736178_lbnruvf0jn.css">


<link  rel="stylesheet" href="/css/main.css" />


  <link id="highlight-css" rel="stylesheet" href="/css/highlight.css" />
  
    <link id="highlight-css-dark" rel="stylesheet" href="/css/highlight-dark.css" />
  




  <script id="fluid-configs">
    var Fluid = window.Fluid || {};
    Fluid.ctx = Object.assign({}, Fluid.ctx)
    var CONFIG = {"hostname":"chang6666.github.io","root":"/","version":"1.9.7","typing":{"enable":true,"typeSpeed":70,"cursorChar":"_","loop":false,"scope":[]},"anchorjs":{"enable":true,"element":"h1,h2,h3,h4,h5,h6","placement":"left","visible":"hover","icon":""},"progressbar":{"enable":true,"height_px":3,"color":"#29d","options":{"showSpinner":false,"trickleSpeed":100}},"code_language":{"enable":true,"default":"TEXT"},"copy_btn":true,"image_caption":{"enable":true},"image_zoom":{"enable":true,"img_url_replace":["",""]},"toc":{"enable":true,"placement":"right","headingSelector":"h1,h2,h3,h4,h5,h6","collapseDepth":0},"lazyload":{"enable":true,"loading_img":"/img/loading.gif","onlypost":false,"offset_factor":2},"web_analytics":{"enable":false,"follow_dnt":true,"baidu":null,"google":{"measurement_id":null},"tencent":{"sid":null,"cid":null},"woyaola":null,"cnzz":null,"leancloud":{"app_id":null,"app_key":null,"server_url":null,"path":"window.location.pathname","ignore_local":false}},"search_path":"/local-search.xml","include_content_in_search":true};

    if (CONFIG.web_analytics.follow_dnt) {
      var dntVal = navigator.doNotTrack || window.doNotTrack || navigator.msDoNotTrack;
      Fluid.ctx.dnt = dntVal && (dntVal.startsWith('1') || dntVal.startsWith('yes') || dntVal.startsWith('on'));
    }
  </script>
  <script  src="/js/utils.js" ></script>
  <script  src="/js/color-schema.js" ></script>
  


  
<meta name="generator" content="Hexo 7.3.0"></head>


<body>
  

  <header>
    

<div class="header-inner" style="height: 70vh;">
  <nav id="navbar" class="navbar fixed-top  navbar-expand-lg navbar-dark scrolling-navbar">
  <div class="container">
    <a class="navbar-brand" href="/">
      <strong>码农十八讲</strong>
    </a>

    <button id="navbar-toggler-btn" class="navbar-toggler" type="button" data-toggle="collapse"
            data-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <div class="animated-icon"><span></span><span></span><span></span></div>
    </button>

    <!-- Collapsible content -->
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav ml-auto text-center">
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/" target="_self">
                <i class="iconfont icon-home-fill"></i>
                <span>首页</span>
              </a>
            </li>
          
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/archives/" target="_self">
                <i class="iconfont icon-archive-fill"></i>
                <span>归档</span>
              </a>
            </li>
          
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/categories/" target="_self">
                <i class="iconfont icon-category-fill"></i>
                <span>分类</span>
              </a>
            </li>
          
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/tags/" target="_self">
                <i class="iconfont icon-tags-fill"></i>
                <span>标签</span>
              </a>
            </li>
          
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/about/" target="_self">
                <i class="iconfont icon-user-fill"></i>
                <span>关于</span>
              </a>
            </li>
          
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/links/" target="_self">
                <i class="iconfont icon-link-fill"></i>
                <span>友链</span>
              </a>
            </li>
          
        
        
          <li class="nav-item" id="search-btn">
            <a class="nav-link" target="_self" href="javascript:;" data-toggle="modal" data-target="#modalSearch" aria-label="Search">
              <i class="iconfont icon-search"></i>
            </a>
          </li>
          
        
        
          <li class="nav-item" id="color-toggle-btn">
            <a class="nav-link" target="_self" href="javascript:;" aria-label="Color Toggle">
              <i class="iconfont icon-dark" id="color-toggle-icon"></i>
            </a>
          </li>
        
      </ul>
    </div>
  </div>
</nav>

  

<div id="banner" class="banner" parallax=true
     style="background: url('/img/default.png') no-repeat center center; background-size: cover;">
  <div class="full-bg-img">
    <div class="mask flex-center" style="background-color: rgba(0, 0, 0, 0.3)">
      <div class="banner-text text-center fade-in-up">
        <div class="h2">
          
            <span id="subtitle" data-typed-text="听说辰哥还不会调试RocketMQ源码?今晚不睡也得让辰哥学会"></span>
          
        </div>

        
          
  <div class="mt-3">
    
    
      <span class="post-meta">
        <i class="iconfont icon-date-fill" aria-hidden="true"></i>
        <time datetime="2021-07-03 08:29" pubdate>
          2021年7月3日 早上
        </time>
      </span>
    
  </div>

  <div class="mt-1">
    
      <span class="post-meta mr-2">
        <i class="iconfont icon-chart"></i>
        
          1k 字
        
      </span>
    

    
      <span class="post-meta mr-2">
        <i class="iconfont icon-clock-fill"></i>
        
        
        
          9 分钟
        
      </span>
    

    
    
  </div>


        
      </div>

      
    </div>
  </div>
</div>

</div>

  </header>

  <main>
    
      

<div class="container-fluid nopadding-x">
  <div class="row nomargin-x">
    <div class="side-col d-none d-lg-block col-lg-2">
      

    </div>

    <div class="col-lg-8 nopadding-x-md">
      <div class="container nopadding-x-md" id="board-ctn">
        <div id="board">
          <article class="post-content mx-auto">
            <h1 id="seo-header">听说辰哥还不会调试RocketMQ源码?今晚不睡也得让辰哥学会</h1>
            
            
              <div class="markdown-body">
                
                <h4 id="1-获取RocketMQ源码"><a href="#1-获取RocketMQ源码" class="headerlink" title="1. 获取RocketMQ源码"></a>1. 获取RocketMQ源码</h4><p>RocketMQ原先是阿里巴巴内部使用的消息中间件,于2017年提交到Apache基金会成为Apache基金会的顶级开源项目,GitHub代码库链接:<a target="_blank" rel="noopener" href="https://github.com/apache/rocketmq.git">https://github.com/apache/rocketmq.git</a>.在Github网站上搜索RocketMQ,如图所示.</p>
<p><img src="https://raw.githubusercontent.com/ChangNingbo/blog_img/main/img202208081429568.png" srcset="/img/loading.gif" lazyload alt="截屏2021-11-02 21.56.03"></p>
<blockquote>
<p>克隆源码,命令如下</p>
</blockquote>
<p>git clone <a target="_blank" rel="noopener" href="https://github.com/apache/rocketmq.git">https://github.com/apache/rocketmq.git</a></p>
<blockquote>
<p>克隆完成后,在IntelliJ IDEA打开</p>
</blockquote>
<p>导入成功后,效果如图所示</p>
<p><img src="https://raw.githubusercontent.com/ChangNingbo/blog_img/main/img202208081429519.png" srcset="/img/loading.gif" lazyload alt="截屏2021-11-02 22.52.00"></p>
<blockquote>
<p>执行maven clean install 进行编译和下载依赖</p>
</blockquote>
<p>下载完成后,控制台提示BUILD SUCCESS信息</p>
<h4 id="2-在IntelliJ-IDEA调试RocketMQ源码"><a href="#2-在IntelliJ-IDEA调试RocketMQ源码" class="headerlink" title="2. 在IntelliJ IDEA调试RocketMQ源码"></a>2. 在IntelliJ IDEA调试RocketMQ源码</h4><h5 id="1-启动NameServer"><a href="#1-启动NameServer" class="headerlink" title="(1) 启动NameServer"></a>(1) 启动NameServer</h5><ul>
<li>展开namesrc模块,右键NamesrvStartup.java,移动到Debug As,选中Debug ‘NamesrvStartup.java.main()’</li>
<li>点击Environment variables后面的按钮,弹出Environment variables对话框</li>
<li>点击+号,在Name输入框中输入ROCKETMQ_HOME,Value输入源码的保存路径,点击OK即可</li>
<li>在RocketMQ运行主目录创建conf、logs、store三个文件夹</li>
<li>在RocketMQ distribution部署目录中将broker.conf、logback_broker.xml文件复制到conf目录中,logback_namesrv.xml文件,只需修改日志文件的目录,brocker.conf文件目录内容代码如下所示</li>
</ul>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">brokerClusterName</span> = DefaultCluster<br><span class="hljs-attr">brokerName</span> = broker-a<br><span class="hljs-attr">brokerId</span> = <span class="hljs-number">0</span><br><span class="hljs-comment">#nameServer地址，分号分割</span><br><span class="hljs-attr">namesrvAddr</span>=<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">9876</span><br><span class="hljs-attr">deleteWhen</span> = <span class="hljs-number">04</span><br><span class="hljs-attr">fileReservedTime</span> = <span class="hljs-number">48</span><br><span class="hljs-attr">brokerRole</span> = ASYNC_MASTER<br><span class="hljs-attr">flushDiskType</span> = ASYNC_FLUSH<br><br><span class="hljs-comment"># 存储路径</span><br><span class="hljs-attr">storePathRootDir</span>=/rocketmq/store<br><span class="hljs-comment"># commitLog 存储路径</span><br><span class="hljs-attr">storePathCommitLog</span>=/rocketmq/store/commitLog<br><span class="hljs-comment"># 消费队列存储路径</span><br><span class="hljs-attr">storePathConsumeQueue</span>=/rocketmq/store/consumequeue<br><span class="hljs-comment"># 消息索引存储路径</span><br><span class="hljs-attr">storePathIndex</span>=/rocketmq/store/index<br><span class="hljs-comment"># checkpoint 文件存储路径</span><br><span class="hljs-attr">storeCheckpoint</span>=/rocketmq/store/checkpoint<br><span class="hljs-comment"># abort 文件存储路径</span><br><span class="hljs-attr">abortFile</span>=/rocketmq/store/abort<br></code></pre></td></tr></table></figure>

<ul>
<li>在IntelliJ IDEA Debug中运行NamesrvStartup,并输出“The Name Server boot success.Serializetype&#x3D;JSON”</li>
</ul>
<h5 id="2-启动Broker"><a href="#2-启动Broker" class="headerlink" title="(2) 启动Broker"></a>(2) 启动Broker</h5><ul>
<li><p>展开broker模块，右键BrokerStartup.java执行，会提示需要配置ROCKETMQ_HOME。在idea右上角选中Debug Configurations,</p>
<p>在弹出的对话框中选择arguments选项，配置-c属性指定broker配置文件路径</p>
<p><img src="https://raw.githubusercontent.com/ChangNingbo/blog_img/main/img202208081429973.png" srcset="/img/loading.gif" lazyload alt="截屏2021-11-03 00.31.54"></p>
</li>
<li><p>切换选项卡Environment，配置ROCKETMQ_HOME主目录和broker配置文件</p>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/ChangNingbo/blog_img/main/img202208081429089.png" srcset="/img/loading.gif" lazyload alt="截屏2021-11-03 00.33.25"></p>
<ul>
<li>以debug模式运行BrokerStartup.java，查看${ROCKETMQ_HOME}&#x2F;logs&#x2F;broker.log文件，未报错则表示启动成功</li>
</ul>
<h5 id="3-使用RocketMQ提供的实例验证消息发送与消息消费"><a href="#3-使用RocketMQ提供的实例验证消息发送与消息消费" class="headerlink" title="(3) 使用RocketMQ提供的实例验证消息发送与消息消费"></a>(3) 使用RocketMQ提供的实例验证消息发送与消息消费</h5><ul>
<li>修改org.apache.rocketmq.example.quickstart.Producer示例程序，设置消息生产者NameServer地址</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Licensed to the Apache Software Foundation (ASF) under one or more</span><br><span class="hljs-comment"> * contributor license agreements.  See the NOTICE file distributed with</span><br><span class="hljs-comment"> * this work for additional information regarding copyright ownership.</span><br><span class="hljs-comment"> * The ASF licenses this file to You under the Apache License, Version 2.0</span><br><span class="hljs-comment"> * (the &quot;License&quot;); you may not use this file except in compliance with</span><br><span class="hljs-comment"> * the License.  You may obtain a copy of the License at</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment"> * See the License for the specific language governing permissions and</span><br><span class="hljs-comment"> * limitations under the License.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">package</span> org.apache.rocketmq.example.quickstart;<br><br><span class="hljs-keyword">import</span> org.apache.rocketmq.client.exception.MQClientException;<br><span class="hljs-keyword">import</span> org.apache.rocketmq.client.producer.DefaultMQProducer;<br><span class="hljs-keyword">import</span> org.apache.rocketmq.client.producer.SendResult;<br><span class="hljs-keyword">import</span> org.apache.rocketmq.common.message.Message;<br><span class="hljs-keyword">import</span> org.apache.rocketmq.remoting.common.RemotingHelper;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * This class demonstrates how to send messages to brokers using provided &#123;<span class="hljs-doctag">@link</span> DefaultMQProducer&#125;.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Producer</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> MQClientException, InterruptedException &#123;<br><br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">         * Instantiate with a producer group name.</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-type">DefaultMQProducer</span> <span class="hljs-variable">producer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DefaultMQProducer</span>(<span class="hljs-string">&quot;please_rename_unique_group_name&quot;</span>);<br>        <br>        producer.setNamesrvAddr(<span class="hljs-string">&quot;127.0.0.1:9876&quot;</span>);<br><br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">         * Specify name server addresses.</span><br><span class="hljs-comment">         * &lt;p/&gt;</span><br><span class="hljs-comment">         *</span><br><span class="hljs-comment">         * Alternatively, you may specify name server addresses via exporting environmental variable: NAMESRV_ADDR</span><br><span class="hljs-comment">         * &lt;pre&gt;</span><br><span class="hljs-comment">         * &#123;@code</span><br><span class="hljs-comment">         * producer.setNamesrvAddr(&quot;name-server1-ip:9876;name-server2-ip:9876&quot;);</span><br><span class="hljs-comment">         * &#125;</span><br><span class="hljs-comment">         * &lt;/pre&gt;</span><br><span class="hljs-comment">         */</span><br><br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">         * Launch the instance.</span><br><span class="hljs-comment">         */</span><br>        producer.start();<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">1000</span>; i++) &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br><br>                <span class="hljs-comment">/*</span><br><span class="hljs-comment">                 * Create a message instance, specifying topic, tag and message body.</span><br><span class="hljs-comment">                 */</span><br>                <span class="hljs-type">Message</span> <span class="hljs-variable">msg</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Message</span>(<span class="hljs-string">&quot;TopicTest&quot;</span> <span class="hljs-comment">/* Topic */</span>,<br>                    <span class="hljs-string">&quot;TagA&quot;</span> <span class="hljs-comment">/* Tag */</span>,<br>                    (<span class="hljs-string">&quot;Hello RocketMQ &quot;</span> + i).getBytes(RemotingHelper.DEFAULT_CHARSET) <span class="hljs-comment">/* Message body */</span><br>                );<br><br>                <span class="hljs-comment">/*</span><br><span class="hljs-comment">                 * Call send message to deliver message to one of brokers.</span><br><span class="hljs-comment">                 */</span><br>                <span class="hljs-type">SendResult</span> <span class="hljs-variable">sendResult</span> <span class="hljs-operator">=</span> producer.send(msg);<br>                <span class="hljs-comment">/*</span><br><span class="hljs-comment">                 * There are different ways to send message, if you don&#x27;t care about the send result,you can use this way</span><br><span class="hljs-comment">                 * &#123;@code</span><br><span class="hljs-comment">                 * producer.sendOneway(msg);</span><br><span class="hljs-comment">                 * &#125;</span><br><span class="hljs-comment">                 */</span><br><br>                <span class="hljs-comment">/*</span><br><span class="hljs-comment">                 * if you want to get the send result in a synchronize way, you can use this send method</span><br><span class="hljs-comment">                 * &#123;@code</span><br><span class="hljs-comment">                 * SendResult sendResult = producer.send(msg);</span><br><span class="hljs-comment">                 * System.out.printf(&quot;%s%n&quot;, sendResult);</span><br><span class="hljs-comment">                 * &#125;</span><br><span class="hljs-comment">                 */</span><br><br>                <span class="hljs-comment">/*</span><br><span class="hljs-comment">                 * if you want to get the send result in a asynchronize way, you can use this send method</span><br><span class="hljs-comment">                 * &#123;@code</span><br><span class="hljs-comment">                 *</span><br><span class="hljs-comment">                 *  producer.send(msg, new SendCallback() &#123;</span><br><span class="hljs-comment">                 *  @Override</span><br><span class="hljs-comment">                 *  public void onSuccess(SendResult sendResult) &#123;</span><br><span class="hljs-comment">                 *      // do something</span><br><span class="hljs-comment">                 *  &#125;</span><br><span class="hljs-comment">                 *</span><br><span class="hljs-comment">                 *  @Override</span><br><span class="hljs-comment">                 *  public void onException(Throwable e) &#123;</span><br><span class="hljs-comment">                 *      // do something</span><br><span class="hljs-comment">                 *  &#125;</span><br><span class="hljs-comment">                 *&#125;);</span><br><span class="hljs-comment">                 *</span><br><span class="hljs-comment">                 *&#125;</span><br><span class="hljs-comment">                 */</span><br><br>                System.out.printf(<span class="hljs-string">&quot;%s%n&quot;</span>, sendResult);<br>            &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                e.printStackTrace();<br>                Thread.sleep(<span class="hljs-number">1000</span>);<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">         * Shut down once the producer instance is not longer in use.</span><br><span class="hljs-comment">         */</span><br>        producer.shutdown();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>

<ul>
<li>运行示例程序，查看运行结果，如有输出sendStatus&#x3D;SEND_OK则表示消息发送成功</li>
<li>修改org.apache.rocketmq.example.quickstart.Consumer示例程序，设置消息消费者NameServer地址</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Licensed to the Apache Software Foundation (ASF) under one or more</span><br><span class="hljs-comment"> * contributor license agreements.  See the NOTICE file distributed with</span><br><span class="hljs-comment"> * this work for additional information regarding copyright ownership.</span><br><span class="hljs-comment"> * The ASF licenses this file to You under the Apache License, Version 2.0</span><br><span class="hljs-comment"> * (the &quot;License&quot;); you may not use this file except in compliance with</span><br><span class="hljs-comment"> * the License.  You may obtain a copy of the License at</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="hljs-comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment"> * See the License for the specific language governing permissions and</span><br><span class="hljs-comment"> * limitations under the License.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">package</span> org.apache.rocketmq.example.quickstart;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> org.apache.rocketmq.client.consumer.DefaultMQPushConsumer;<br><span class="hljs-keyword">import</span> org.apache.rocketmq.client.consumer.listener.ConsumeConcurrentlyContext;<br><span class="hljs-keyword">import</span> org.apache.rocketmq.client.consumer.listener.ConsumeConcurrentlyStatus;<br><span class="hljs-keyword">import</span> org.apache.rocketmq.client.consumer.listener.MessageListenerConcurrently;<br><span class="hljs-keyword">import</span> org.apache.rocketmq.client.exception.MQClientException;<br><span class="hljs-keyword">import</span> org.apache.rocketmq.common.consumer.ConsumeFromWhere;<br><span class="hljs-keyword">import</span> org.apache.rocketmq.common.message.MessageExt;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * This example shows how to subscribe and consume messages using providing &#123;<span class="hljs-doctag">@link</span> DefaultMQPushConsumer&#125;.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Consumer</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> InterruptedException, MQClientException &#123;<br><br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">         * Instantiate with specified consumer group name.</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-type">DefaultMQPushConsumer</span> <span class="hljs-variable">consumer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DefaultMQPushConsumer</span>(<span class="hljs-string">&quot;please_rename_unique_group_name_4&quot;</span>);<br>        consumer.setNamesrvAddr(<span class="hljs-string">&quot;127.0.0.1:9876&quot;</span>);<br><br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">         * Specify name server addresses.</span><br><span class="hljs-comment">         * &lt;p/&gt;</span><br><span class="hljs-comment">         *</span><br><span class="hljs-comment">         * Alternatively, you may specify name server addresses via exporting environmental variable: NAMESRV_ADDR</span><br><span class="hljs-comment">         * &lt;pre&gt;</span><br><span class="hljs-comment">         * &#123;@code</span><br><span class="hljs-comment">         * consumer.setNamesrvAddr(&quot;name-server1-ip:9876;name-server2-ip:9876&quot;);</span><br><span class="hljs-comment">         * &#125;</span><br><span class="hljs-comment">         * &lt;/pre&gt;</span><br><span class="hljs-comment">         */</span><br><br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">         * Specify where to start in case the specified consumer group is a brand new one.</span><br><span class="hljs-comment">         */</span><br>        consumer.setConsumeFromWhere(ConsumeFromWhere.CONSUME_FROM_FIRST_OFFSET);<br><br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">         * Subscribe one more more topics to consume.</span><br><span class="hljs-comment">         */</span><br>        consumer.subscribe(<span class="hljs-string">&quot;TopicTest&quot;</span>, <span class="hljs-string">&quot;*&quot;</span>);<br><br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">         *  Register callback to execute on arrival of messages fetched from brokers.</span><br><span class="hljs-comment">         */</span><br>        consumer.registerMessageListener(<span class="hljs-keyword">new</span> <span class="hljs-title class_">MessageListenerConcurrently</span>() &#123;<br><br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-keyword">public</span> ConsumeConcurrentlyStatus <span class="hljs-title function_">consumeMessage</span><span class="hljs-params">(List&lt;MessageExt&gt; msgs,</span><br><span class="hljs-params">                ConsumeConcurrentlyContext context)</span> &#123;<br>                System.out.printf(<span class="hljs-string">&quot;%s Receive New Messages: %s %n&quot;</span>, Thread.currentThread().getName(), msgs);<br>                <span class="hljs-keyword">return</span> ConsumeConcurrentlyStatus.CONSUME_SUCCESS;<br>            &#125;<br>        &#125;);<br><br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">         *  Launch the consumer instance.</span><br><span class="hljs-comment">         */</span><br>        consumer.start();<br><br>        System.out.printf(<span class="hljs-string">&quot;Consumer Started.%n&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>

<ul>
<li>运行消费者程序</li>
</ul>
<p>消息发送与消息消费都成功，则说明RocketMQ调试环境已成功搭建，可以通过Debug调试源码，探索RocketMQ的奥秘了。</p>

                
              </div>
            
            <hr/>
            <div>
              <div class="post-metas my-3">
  
    <div class="post-meta mr-3 d-flex align-items-center">
      <i class="iconfont icon-category"></i>
      

<span class="category-chains">
  
  
    
      <span class="category-chain">
        
  <a href="/categories/RocketMQ/" class="category-chain-item">RocketMQ</a>
  
  

      </span>
    
  
</span>

    </div>
  
  
    <div class="post-meta">
      <i class="iconfont icon-tags"></i>
      
        <a href="/tags/RocketMQ/" class="print-no-link">#RocketMQ</a>
      
    </div>
  
</div>


              
  

  <div class="license-box my-3">
    <div class="license-title">
      <div>听说辰哥还不会调试RocketMQ源码?今晚不睡也得让辰哥学会</div>
      <div>https://chang6666.github.io/2021/07/03/2021-07-03-听说辰哥还不会调试RocketMQ源码?今晚不睡也得让辰哥学会/</div>
    </div>
    <div class="license-meta">
      
        <div class="license-meta-item">
          <div>作者</div>
          <div>James</div>
        </div>
      
      
        <div class="license-meta-item license-meta-date">
          <div>发布于</div>
          <div>2021年7月3日</div>
        </div>
      
      
      
        <div class="license-meta-item">
          <div>许可协议</div>
          <div>
            
              
              
                <a class="print-no-link" target="_blank" href="https://creativecommons.org/licenses/by/4.0/">
                  <span class="hint--top hint--rounded" aria-label="BY - 署名">
                    <i class="iconfont icon-by"></i>
                  </span>
                </a>
              
            
          </div>
        </div>
      
    </div>
    <div class="license-icon iconfont"></div>
  </div>



              
                <div class="post-prevnext my-3">
                  <article class="post-prev col-6">
                    
                    
                      <a href="/2021/07/06/2021-07-06-RocketMQ%E6%8A%A5%E9%94%99-%20sendDefaultImpl%20call%20timeout/" title="RocketMQ报错- sendDefaultImpl call timeout">
                        <i class="iconfont icon-arrowleft"></i>
                        <span class="hidden-mobile">RocketMQ报错- sendDefaultImpl call timeout</span>
                        <span class="visible-mobile">上一篇</span>
                      </a>
                    
                  </article>
                  <article class="post-next col-6">
                    
                    
                      <a href="/2021/07/02/2021-07-02-%E4%BD%A0%E7%9A%84%E9%A1%B9%E7%9B%AE%E6%98%AF%E6%97%B6%E5%80%99%E9%9B%86%E6%88%90RocketMQ%E4%BA%86/" title="你的项目是时候集成RocketMQ了">
                        <span class="hidden-mobile">你的项目是时候集成RocketMQ了</span>
                        <span class="visible-mobile">下一篇</span>
                        <i class="iconfont icon-arrowright"></i>
                      </a>
                    
                  </article>
                </div>
              
            </div>

            
          </article>
        </div>
      </div>
    </div>

    <div class="side-col d-none d-lg-block col-lg-2">
      
  <aside class="sidebar" style="margin-left: -1rem">
    <div id="toc">
  <p class="toc-header">
    <i class="iconfont icon-list"></i>
    <span>目录</span>
  </p>
  <div class="toc-body" id="toc-body"></div>
</div>



  </aside>


    </div>
  </div>
</div>





  



  



  



  



  







    

    
      <a id="scroll-top-button" aria-label="TOP" href="#" role="button">
        <i class="iconfont icon-arrowup" aria-hidden="true"></i>
      </a>
    

    
      <div class="modal fade" id="modalSearch" tabindex="-1" role="dialog" aria-labelledby="ModalLabel"
     aria-hidden="true">
  <div class="modal-dialog modal-dialog-scrollable modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header text-center">
        <h4 class="modal-title w-100 font-weight-bold">搜索</h4>
        <button type="button" id="local-search-close" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body mx-3">
        <div class="md-form mb-5">
          <input type="text" id="local-search-input" class="form-control validate">
          <label data-error="x" data-success="v" for="local-search-input">关键词</label>
        </div>
        <div class="list-group" id="local-search-result"></div>
      </div>
    </div>
  </div>
</div>

    

    
  </main>

  <footer>
    <div class="footer-inner">
  
    <div class="footer-content">
       <a href="###" target="_blank" rel="nofollow noopener"><span>James</span></a> <i class="iconfont icon-love"></i> <a href="###" target="_blank" rel="nofollow noopener"><span>SJ</span></a> 
    </div>
  
  
  
  
</div>

  </footer>

  <!-- Scripts -->
  
  <script  src="https://lib.baomitu.com/nprogress/0.2.0/nprogress.min.js" ></script>
  <link  rel="stylesheet" href="https://lib.baomitu.com/nprogress/0.2.0/nprogress.min.css" />

  <script>
    NProgress.configure({"showSpinner":false,"trickleSpeed":100})
    NProgress.start()
    window.addEventListener('load', function() {
      NProgress.done();
    })
  </script>


<script  src="https://lib.baomitu.com/jquery/3.6.4/jquery.min.js" ></script>
<script  src="https://lib.baomitu.com/twitter-bootstrap/4.6.1/js/bootstrap.min.js" ></script>
<script  src="/js/events.js" ></script>
<script  src="/js/plugins.js" ></script>


  <script  src="https://lib.baomitu.com/typed.js/2.0.12/typed.min.js" ></script>
  <script>
    (function (window, document) {
      var typing = Fluid.plugins.typing;
      var subtitle = document.getElementById('subtitle');
      if (!subtitle || !typing) {
        return;
      }
      var text = subtitle.getAttribute('data-typed-text');
      
        typing(text);
      
    })(window, document);
  </script>




  
    <script  src="/js/img-lazyload.js" ></script>
  




  
<script>
  Fluid.utils.createScript('https://lib.baomitu.com/tocbot/4.20.1/tocbot.min.js', function() {
    var toc = jQuery('#toc');
    if (toc.length === 0 || !window.tocbot) { return; }
    var boardCtn = jQuery('#board-ctn');
    var boardTop = boardCtn.offset().top;

    window.tocbot.init(Object.assign({
      tocSelector     : '#toc-body',
      contentSelector : '.markdown-body',
      linkClass       : 'tocbot-link',
      activeLinkClass : 'tocbot-active-link',
      listClass       : 'tocbot-list',
      isCollapsedClass: 'tocbot-is-collapsed',
      collapsibleClass: 'tocbot-is-collapsible',
      scrollSmooth    : true,
      includeTitleTags: true,
      headingsOffset  : -boardTop,
    }, CONFIG.toc));
    if (toc.find('.toc-list-item').length > 0) {
      toc.css('visibility', 'visible');
    }

    Fluid.events.registerRefreshCallback(function() {
      if ('tocbot' in window) {
        tocbot.refresh();
        var toc = jQuery('#toc');
        if (toc.length === 0 || !tocbot) {
          return;
        }
        if (toc.find('.toc-list-item').length > 0) {
          toc.css('visibility', 'visible');
        }
      }
    });
  });
</script>


  <script src=https://lib.baomitu.com/clipboard.js/2.0.11/clipboard.min.js></script>

  <script>Fluid.plugins.codeWidget();</script>


  
<script>
  Fluid.utils.createScript('https://lib.baomitu.com/anchor-js/4.3.1/anchor.min.js', function() {
    window.anchors.options = {
      placement: CONFIG.anchorjs.placement,
      visible  : CONFIG.anchorjs.visible
    };
    if (CONFIG.anchorjs.icon) {
      window.anchors.options.icon = CONFIG.anchorjs.icon;
    }
    var el = (CONFIG.anchorjs.element || 'h1,h2,h3,h4,h5,h6').split(',');
    var res = [];
    for (var item of el) {
      res.push('.markdown-body > ' + item.trim());
    }
    if (CONFIG.anchorjs.placement === 'left') {
      window.anchors.options.class = 'anchorjs-link-left';
    }
    window.anchors.add(res.join(', '));

    Fluid.events.registerRefreshCallback(function() {
      if ('anchors' in window) {
        anchors.removeAll();
        var el = (CONFIG.anchorjs.element || 'h1,h2,h3,h4,h5,h6').split(',');
        var res = [];
        for (var item of el) {
          res.push('.markdown-body > ' + item.trim());
        }
        if (CONFIG.anchorjs.placement === 'left') {
          anchors.options.class = 'anchorjs-link-left';
        }
        anchors.add(res.join(', '));
      }
    });
  });
</script>


  
<script>
  Fluid.utils.createScript('https://lib.baomitu.com/fancybox/3.5.7/jquery.fancybox.min.js', function() {
    Fluid.plugins.fancyBox();
  });
</script>


  <script>Fluid.plugins.imageCaption();</script>

  <script  src="/js/local-search.js" ></script>





<!-- 主题的启动项，将它保持在最底部 -->
<!-- the boot of the theme, keep it at the bottom -->
<script  src="/js/boot.js" ></script>


  

  <noscript>
    <div class="noscript-warning">博客在允许 JavaScript 运行的环境下浏览效果更佳</div>
  </noscript>
</body>
</html>
